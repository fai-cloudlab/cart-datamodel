{
   "swagger": "2.0",
   "info": {
      "description": "This API is part of Fujitsu's Cloud Lab Demo",
      "version": "1.0.0",
      "title": "FAI Cart API",
      "contact": {
         "email": "pavan.vadarevu@fujitsu.com"
      },
      "license": {
         "name": "Apache 2.0",
         "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
   },
   "host": "virtserver.swaggerhub.com",
   "tags": [
      {
         "name": "reads",
         "description": "-- reader operations"
      },
      {
         "name": "writes",
         "description": "-- writer operations"
      }
   ],
   "schemes": [
      "https",
      "http"
   ],
   "paths": {
      "/cart": {
         "get": {
            "tags": [
               "reads"
            ],
            "summary": "retrieve cart by cart id",
            "description": "By passing the right cartId, you can retrieve the cart details from the Cache.",
            "operationId": "getCart",
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "cartId",
                  "in": "path",
                  "description": "cartId String",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "transactionId",
                  "in": "header",
                  "description": "A unique id for each request generated by each application",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "cart details matching the criteria",
                  "schema": {
                     "$ref": "#/definitions/cart"
                  }
               },
               "404": {
                  "description": "NotFound",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               },
               "500": {
                  "description": "Internal Server Error",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "writes"
            ],
            "summary": "Adds offer to the cart",
            "description": "Adds offer to the cart",
            "operationId": "writeCart",
            "consumes": [
               "application/json",
               "application/xml",
               "text/xml"
            ],
            "produces": [
               "application/json",
               "application/xml",
               "text/xml"
            ],
            "parameters": [
               {
                  "name": "transactionId",
                  "in": "header",
                  "description": "A unique id for each request generated by each application",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "cartSearchCriteria",
                  "description": "cart search criteria",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/cartSearchCriteria"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "cart details",
                  "schema": {
                     "$ref": "#/definitions/cart"
                  }
               },
               "400": {
                  "description": "Bad Request, invalid input, object invalid",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               },
               "401": {
                  "description": "Unauthorized",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               },
               "403": {
                  "description": "Forbidden",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               },
               "404": {
                  "description": "Not Found",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               },
               "409": {
                  "description": "an existing item already exists",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               },
               "500": {
                  "description": "Internal Server Error",
                  "schema": {
                     "$ref": "#/definitions/errorResponses"
                  }
               }
            }
         }
      }
   },
   "definitions": {
      "cartSearchCriteria": {
         "type": "object",
         "properties": {
            "cartId": {
               "type": "string",
               "format": "uuid",
               "description": "Unique id generated for each cart."
            },
            "offerId": {
               "type": "string",
               "format": "uuid",
               "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
            },
            "offerExpirationDate": {
               "type": "string",
               "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[\\+\\-]\\d{4})$"
            }
         }
      },
      "cart": {
         "type": "object",
         "properties": {
            "cartId": {
               "type": "string",
               "description": "Unique id generated for each cart."
            },
            "cartExpirationTime": {
               "type": "string",
               "description": "Date and time when the cart expires.",
               "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[\\+\\-]\\d{4})$"
            },
            "cartTotalAmount": {
               "type": "number",
               "format": "double",
               "example": 999.99,
               "description": "Sum of all the items in the cart."
            },
            "offers": {
               "type": "array",
               "description": "List of offers in the cart",
               "items": {
                  "$ref": "#/definitions/offer"
               }
            }
         }
      },
      "offer": {
         "type": "object",
         "required": [
            "offerCreationDate",
            "offerExpirationDate",
            "offerId",
            "offerType",
            "product"
         ],
         "properties": {
            "offerId": {
               "type": "string",
               "format": "uuid",
               "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
            },
            "offerType": {
               "type": "string",
               "example": "BlackFridaySpl2020"
            },
            "offerPrice": {
               "$ref": "#/definitions/Price"
            },
            "paymentTimeLimitUtcTs": {
               "type": "string",
               "description": "Payment Time Limit UTC Timestamp represents the date by which a commitment to pay must be made for the confirmed items in an offer. _ _Example:__2018-04-17T20:02:28+0500__(ISO 8601 format YYYY-MM-DDThh:mm s+|-hhmm)",
               "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[\\+\\-]\\d{4})$"
            },
            "offerCreationDate": {
               "type": "string",
               "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[\\+\\-]\\d{4})$"
            },
            "offerExpirationDate": {
               "type": "string",
               "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[\\+\\-]\\d{4})$"
            },
            "product": {
               "$ref": "#/definitions/Product"
            },
            "customers": {
               "$ref": "#/definitions/customer"
            }
         }
      },
      "Price": {
         "type": "object",
         "required": [
            "currency",
            "value"
         ],
         "properties": {
            "value": {
               "type": "number",
               "format": "double",
               "example": 999.99
            },
            "currency": {
               "type": "string",
               "example": "USD"
            }
         }
      },
      "Product": {
         "type": "object",
         "required": [
            "productCategory",
            "productCode",
            "productType"
         ],
         "properties": {
            "productCode": {
               "type": "string",
               "example": "XPS7950"
            },
            "productType": {
               "type": "string",
               "example": "Laptop"
            },
            "productCategory": {
               "type": "string",
               "example": "Home Computing"
            }
         }
      },
      "pointOfSale": {
         "type": "object",
         "properties": {
            "countryCode": {
               "type": "string",
               "example": "US",
               "description": "Country Code specifies a region or territory. Example- US = United States of America (ISO 3166-1 alpha-2 format)",
               "pattern": "^[A-Z]{2}$"
            },
            "pointOfSaleCityCode": {
               "type": "string",
               "description": "Point Of Sale City Code represents the municipality or urban area where an entity, authorized to sell transportation and related goods and services on behalf of an airline, is located."
            },
            "pointOfSaleId": {
               "type": "string",
               "description": "Point Of Sale Identifier uniquely identifies an entity which may perform several functions in regards to sales transactions. It may make reservations and/or report sales transactions to a central reporting location and/or issue ticket documents. It may be a travel agency or a BARTS location or some other entity, such as a GSA."
            },
            "ipAddress": {
               "type": "string",
               "description": "IP Address Text denotes the ipAddress from where the request got initiated"
            },
            "browserType": {
               "type": "string",
               "description": "Browser Type Text denotes the browser used by the consumer from where the request got initiated"
            }
         },
         "description": "Point Of Sale represents certain attributes regarding the point at which the sale of a products occur."
      },
      "customer": {
         "type": "object",
         "properties": {
            "customerId": {
               "type": "string",
               "description": "Customer Identifier represents a person or organization that initiates contact with a company or responds to a company initiation of contact."
            },
            "emailAdr": {
               "type": "string",
               "description": "Electronic Mail (Email) Address specifies a character string which, when input within a particular context, will direct information to a resource available to a specific owner.\n"
            },
            "firstName": {
               "type": "string",
               "description": "First Name of the customer"
            },
            "lastName": {
               "type": "string",
               "description": "Last Name of the customer"
            }
         }
      },
      "pricingCriteria": {
         "type": "object",
         "required": [
            "currency"
         ],
         "properties": {
            "currency": {
               "type": "string",
               "description": "Currency Code identifies a medium of exchange which allows for the translation of different-valued denominations of money across the world. Example:  USD = US Dollar  (ISO 4217 format)",
               "pattern": "^[A-Z]{3}$",
               "example": "USD"
            }
         }
      },
      "errorResponses": {
         "type": "object",
         "properties": {
            "code": {
               "type": "string",
               "description": "Highest level error code sent by API."
            },
            "message": {
               "type": "string",
               "description": "Consumer friendly error message sent by API."
            },
            "developerMessage": {
               "type": "string",
               "description": "Technical details about the error for the understanding of API consumer developer."
            }
         },
         "description": "Technical details about the error including error code, message and additional details, if any"
      }
   },
   "basePath": "/cart/sample/1.0.0"
}