/*
 * FAI Cart API
 * This API is part of Fujitsu's Cloud Lab Demo
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pavan.vadarevu@fujitsu.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fujitsu.cloudlab.cart.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fujitsu.cloudlab.cart.model.Offer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Cart
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-04T20:28:40.576-04:00")
public class Cart {
  @JsonProperty("cartId")
  private String cartId = null;

  @JsonProperty("cartExpirationTime")
  private String cartExpirationTime = null;

  @JsonProperty("cartTotalAmount")
  private Double cartTotalAmount = null;

  @JsonProperty("offers")
  private List<Offer> offers = null;

  public Cart cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

   /**
   * Unique id generated for each cart.
   * @return cartId
  **/
  @ApiModelProperty(value = "Unique id generated for each cart.")
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }

  public Cart cartExpirationTime(String cartExpirationTime) {
    this.cartExpirationTime = cartExpirationTime;
    return this;
  }

   /**
   * Date and time when the cart expires.
   * @return cartExpirationTime
  **/
  @ApiModelProperty(value = "Date and time when the cart expires.")
  public String getCartExpirationTime() {
    return cartExpirationTime;
  }

  public void setCartExpirationTime(String cartExpirationTime) {
    this.cartExpirationTime = cartExpirationTime;
  }

  public Cart cartTotalAmount(Double cartTotalAmount) {
    this.cartTotalAmount = cartTotalAmount;
    return this;
  }

   /**
   * Sum of all the items in the cart.
   * @return cartTotalAmount
  **/
  @ApiModelProperty(example = "999.99", value = "Sum of all the items in the cart.")
  public Double getCartTotalAmount() {
    return cartTotalAmount;
  }

  public void setCartTotalAmount(Double cartTotalAmount) {
    this.cartTotalAmount = cartTotalAmount;
  }

  public Cart offers(List<Offer> offers) {
    this.offers = offers;
    return this;
  }

  public Cart addOffersItem(Offer offersItem) {
    if (this.offers == null) {
      this.offers = new ArrayList<Offer>();
    }
    this.offers.add(offersItem);
    return this;
  }

   /**
   * List of offers in the cart
   * @return offers
  **/
  @ApiModelProperty(value = "List of offers in the cart")
  public List<Offer> getOffers() {
    return offers;
  }

  public void setOffers(List<Offer> offers) {
    this.offers = offers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cart cart = (Cart) o;
    return Objects.equals(this.cartId, cart.cartId) &&
        Objects.equals(this.cartExpirationTime, cart.cartExpirationTime) &&
        Objects.equals(this.cartTotalAmount, cart.cartTotalAmount) &&
        Objects.equals(this.offers, cart.offers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cartId, cartExpirationTime, cartTotalAmount, offers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cart {\n");
    
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    cartExpirationTime: ").append(toIndentedString(cartExpirationTime)).append("\n");
    sb.append("    cartTotalAmount: ").append(toIndentedString(cartTotalAmount)).append("\n");
    sb.append("    offers: ").append(toIndentedString(offers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

